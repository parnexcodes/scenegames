body:not(.no-js) {
  .no-js-hide,
  noscript {
    display: none !important;
  }
}

.text-center {
  text-align: center;
}

.text-small {
  font-size: .7em;
}

.break-word {
  word-break: break-word;
}

.d-block {
  display: block !important;
}

.block-center {
  margin: 0 auto !important;
}

@include media('<medium') {
  .h-small {
    display: none !important;
  }
}

@include media('>medium') {
  .h-med {
    display: none !important;
  }
}

@mixin rtl {
  body[dir="rtl"] & {
    @content;
  }
}

$util-sides: (
  "t": "top",
  "b": "bottom",
  "l": "left",
  "r": "right",
  "x": "x",
  "y": "y"
);

$util-sizes: (
  "0": 0,
  "1": .25em,
  "2": .5em,
  "3": 1em,
  "4": 1.5em,
  "5": 1.75em
);

// Generate margin & padding helpers props such as
// Usage: {prop}{side}-{size}
// Example: .ml-0 (removes left margins), .py-4 (adds 1.5em padding to top and bottom)

@each $sizer, $size in $util-sizes {
  @each $side, $propVal in $util-sides {
    @each $propK, $prop in ("m": "margin", "p": "padding") {
      .#{$propK}#{$side}-#{$sizer} {
        @if $side == "x" {
          #{$prop}-left: $size !important;
          #{$prop}-right: $size !important;
        } @else if $side == "y" {
          #{$prop}-top: $size !important;
          #{$prop}-bottom: $size !important;
        } @else {
          #{$prop}-#{$propVal}: $size !important;
        }
      }
    }
  }
}
